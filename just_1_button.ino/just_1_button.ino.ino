/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/658af978-6555-4f4c-9987-746ee12e59dd 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool motor_off;
  bool motor_on;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

const int ENA = 9;
const int IN1 = 7;  // high : 전진
const int IN2 = 8;

const int ENB = 19;
const int IN3 = 20;  // high : 전진
const int IN4 = 21;  

const int init_motorSpeed = 60;
int curr_motorSpeed = 0;

unsigned long buttonPressTime = 0;
unsigned long lastUpdateTime = 0;
const unsigned long updateInterval = 100;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();
  
  pinMode(ENA,OUTPUT);
  pinMode(IN1,OUTPUT);
  pinMode(IN2,OUTPUT);

  pinMode(ENB,OUTPUT);
  pinMode(IN3,OUTPUT);
  pinMode(IN4,OUTPUT);

  digitalWrite(IN1,HIGH);
  digitalWrite(IN2,HIGH);
  analogWrite(ENA,0);

  digitalWrite(IN3,HIGH);
  digitalWrite(IN4,HIGH);
  analogWrite(ENA,0);
  
  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void driveMotor(int speed){
  digitalWrite(IN1,HIGH);
  digitalWrite(IN2,LOW);
  analogWrite(ENA,speed);
  
  digitalWrite(IN3,HIGH);
  digitalWrite(IN4,LOW);
  analogWrite(ENB,speed);
}

void stopMotor(){
  digitalWrite(IN1,HIGH);
  digitalWrite(IN2,HIGH);
  analogWrite(ENA,0);
  
  digitalWrite(IN3,HIGH);
  digitalWrite(IN4,HIGH);
  analogWrite(ENB,0);
}



void loop() {
  ArduinoCloud.update();
  // Your code here 
  if(motor_on){
    unsigned long currentTime = millis();
    lastUpdateTime = buttonPressTime;
    curr_motorSpeed = max(init_motorSpeed, curr_motorSpeed);
    if(currentTime - lastUpdateTime >= updateInterval){
      curr_motorSpeed = min(255, curr_motorSpeed + 1);
      driveMotor(curr_motorSpeed);
      lastUpdateTime = currentTime;
    } 
  } 
}
  
  


/*
  Since MotorOn is READ_WRITE variable, onMotorOnChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMotorOnChange()  {
  // Add your code here to act upon MotorOn change
  if(motor_on){
    buttonPressTime = millis();
  } else {
    curr_motorSpeed = 0;
    stopMotor();
  }
}




/*
  Since MotorOff is READ_WRITE variable, onMotorOffChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMotorOffChange()  {
  // Add your code here to act upon MotorOff change
  if(motor_off){
    stopMotor();
  }
}